apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'



// 发布到bintray的配置信息
ext {
    // 项目的主页
    yourSiteUrl = 'https://github.com/totoks/andutil'
    // Git仓库的url
    yourGitUrl = 'https://github.com/totoks/andutil'
    // issue 地址
    YourIssueTrackerUrl = 'https://github.com/totoks/andutil/issues'

    // 项目的名称，将会显示在bintray
    yourProName = 'andutil'
    // 项目的描述
    yourProDesc = 'Android common utils'

    // bintrayID
    yourId = 'totok'
    // nickName
    yourName = 'jeff'
    // email
    yourEmail = 'jf.leilei@gmial.com'

    // 最后生成依赖 compile 'yourGroup:yourArtifactId:yourVersion'
    // 最后生成依赖 compile 'xyz.totok.andutils:andutils:0.0.5'
    yourGroup = 'xyz.totok.andutil'
    yourArtifactId = 'andutil'
    yourVersion = '0.0.8'

    // 此文件中存储的是 bintray 的敏感信息，用户名和key
    // 你需要在该文件中如下声明
    // bintray.user=xxxx
    // bintray.apikey=xxxx
    // 你可以使用项目中的 local.properties
    yourBintrayUserPath = 'local.properties'
}

group = yourGroup
version = yourVersion

//初始化maven库
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters一
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name yourProName
                description yourProDesc
                url yourSiteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id yourId
                        name yourName
                        email yourEmail
                    }
                }
                scm {
                    connection yourGitUrl
                    developerConnection yourGitUrl
                    url yourSiteUrl

                }
            }
        }
    }
}

// This generates sources.jar
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

// This generates javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


//javadoc configuration
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version yourVersion
        links "http://docs.oracle.com/javase/7/docs/api"
        title "$yourProName$yourVersion"
    }
}

// 打包doc,避免注解报错
android.libraryVariants.all { variant ->
    println variant.javaCompile.classpath.files
    if (variant.name == 'release') { //我们只需 release 的 javadoc
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            // title = ''
            // description = ''
            source = variant.javaCompile.source
            classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
            options {
                encoding "utf-8"
                links "http://docs.oracle.com/javase/7/docs/api/"
                linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
            }
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }
        task("javadoc${variant.name.capitalize()}Jar", type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc") {
            classifier = 'javadoc'
            from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
        }
        artifacts {
            archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
        }
    }
}
//依赖传递
//publishing {
//    publications {
//        MyPublication(MavenPublication) {
//
//            pom.withXml {
//                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
//                configurations.implementation.allDependencies.each {
//                    // Ensure dependencies such as fileTree are not included.
//                    if (it.name != 'unspecified') {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', it.group)
//                        dependencyNode.appendNode('artifactId', it.name)
//                        dependencyNode.appendNode('version', it.version)
//                    }
//                }
//            }
//        }
//    }
//}
// 启动上传
bintray {
    Properties properties = new Properties()
    properties.load(project.rootProject.file(yourBintrayUserPath).newDataInputStream())
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    //publications = ['MyPublication']
    configurations = ['archives']

    pkg {
        repo = 'maven'
        name = yourProName
        licenses = ['Apache-2.0']
        vcsUrl = yourGitUrl
        websiteUrl = yourSiteUrl
        issueTrackerUrl = YourIssueTrackerUrl
        // publicDownloadNumbers = true
        publish = true
        // version {
        //    name = yourVersion
        //    desc = yourProDesc
        //    vcsTag = yourVersion

        //    gpg {
        //        sign = true
        //    }
        //}
    }
}

//以下内容用于发布SNAPSHOT版本，如果不需要可以移除。
//参考自：https://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin

//apply plugin: "com.jfrog.artifactory"
//artifactory {
//    contextUrl = 'http://oss.jfrog.org/artifactory' //The base Artifactory URL if not overridden by the publisher/resolver
//    resolve {
//        repository {
//            repoKey = 'libs-release'
//        }
//    }
//    publish {
//        repository {
//            repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to
//            username = bintray.user
//            password = bintray.key
//            maven = true
//        }
//        defaults {
//            //这里的名字和前面bintray.configurations的值一致即可，会将其包含的输出上传到jfrog上去
//            publishConfigs('archives')
//        }
//    }
//}






//project.archivesBaseName = yourArtifactId
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            name yourProName
//            description yourProDesc
//            url yourSiteUrl
//            // inceptionYear '2017'
//
//            packaging 'aar'
//            groupId yourGroup
//            artifactId yourArtifactId
//            version yourVersion
//
//            licenses {
//                license {
//                    name 'The Apache Software License, Version 2.0'
//                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    // distribution 'repo'
//                }
//            }
//            scm {
//                connection yourGitUrl
//                url yourSiteUrl
//            }
//            developers {
//                developer {
//                    id yourId
//                    name yourName
//                    email yourEmail
//                }
//            }
//        }
//    }
//}
